name: CI Tests

on:
  push:
    branches: [ master, release/* ]
  pull_request:
    branches: [ master ]

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  test-postgres:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: alerta
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        id: install-deps
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install .
      - name: Pre-commit hooks
        id: hooks
        run: |
          pre-commit run -a --show-diff-on-failure
      - name: Lint with flake8
        id: lint
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=50 --max-line-length=127 --statistics
      - name: Test with pytest
        id: test
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/alerta
        run: |
          pytest --cov=alerta tests/*.py
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  test-mongodb:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017

    strategy:
      matrix:
        python-version: [3.6, 3.7]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        id: install-deps
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install .
      - name: Pre-commit hooks
        id: hooks
        run: |
          pre-commit run -a --show-diff-on-failure
      - name: Lint with flake8
        id: lint
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=50 --max-line-length=127 --statistics
      - name: Test with pytest
        id: test
        env:
          DATABASE_URL: mongodb://127.0.0.1:27017/alerta
        run: |
          pytest --cov=alerta tests/*.py
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  test-integration:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
      ldap:
        image: rroemhild/test-openldap
        ports:
          - 389:10389
      saml-idp:
        image: jamedjo/test-saml-idp
        ports:
          - 9443:8443
          - 9080:8080
        env:
          SIMPLESAMLPHP_SP_ENTITY_ID: http://localhost:8080
          SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE: http://localhost:8080/auth/saml

    steps:
      - uses: actions/checkout@v2
      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            python3-dev \
            libldap2-dev \
            libsasl2-dev \
            xmlsec1
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Install dependencies
        id: install-deps
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -r requirements-ci.txt
          pip install .
      - name: Integration Test with pytest
        id: integration-test
        env:
          DATABASE_URL: mongodb://127.0.0.1:27017/alerta
        run: |
          pytest tests/integration
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
